package:
  name: lua-resty-events
  version: 0.3.1
  epoch: 0
  description: "Inter process Pub/Sub pattern for Nginx worker processes"
  copyright:
    - license: Apache-2.0

environment:
  contents:
    packages:
      - build-base
      - busybox

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/Kong/lua-resty-events
      tag: ${{package.version}}
      expected-commit: bc85295b7c23eda2dbf2b4acec35c93f77b26787

  - uses: autoconf/make

  - uses: autoconf/make-install

update:
  enabled: true
  github:
    identifier: Kong/lua-resty-events
    use-tag: true

test:
  environment:
    contents:
      packages:
        - bash
        - openresty
  pipeline:
    - uses: test/tw/ldd-check
    - name: "Check lua-resty-events Installation"
      runs: |
        echo "Verifying lua-resty-events installation..."
        if [ -f "/usr/local/lib/lua/resty/events/init.lua" ]; then
          echo "lua-resty-events module found."
        else
          echo "lua-resty-events module not found!" && exit 1
        fi
    - name: "Test lua-resty-events with ngx Mock"
      runs: |
        echo "Running a simple Lua script with resty.events..."

        # Set the correct LUA_PATH and LUA_CPATH
        export LUA_PATH="/usr/local/lib/lua/resty/events/?.lua;;"
        export LUA_CPATH="/usr/local/lib/lua/resty/events/?.so;;"

        # Create a simple ngx mock for tests to avoid errors
        cat <<EOF > test_events.lua
        -- at the top of test_events.lua, before requiring the module:
        package.path = "/usr/local/lib/lua/?.lua;/usr/local/lib/lua/?/init.lua;;" .. package.path

        local events = require "resty.events"
        -- this special flag disables the UNIX socket listener
        local ev = assert(events.new{ testing = true })        -- testing=true skips the socket :contentReference[oaicite:1]{index=1}

        -- subscribe/publish exactly as before
        local cb = ev:subscribe("*","*", function(data, event, source, wid)
          print("â†ª received:", data, "event:", event)
        end)

        assert(ev:publish("all","demo","greeting","hello world"))
        print("published greeting")
        EOF

        # Run the Lua script
        resty test_events.lua
