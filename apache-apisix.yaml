package:
  name: apache-apisix
  version: "3.13.0"
  epoch: 0
  description: "The Cloud-Native API Gateway and AI Gateway"
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      # base64 is required at runtime
      - coreutils
      - luajit
      - openresty

environment:
  contents:
    packages:
      - build-base
      - busybox
      - ca-certificates-bundle
      - curl
      - etcd
      - gcc
      - gnupg
      - luajit
      - luajit-dev
      - luarocks
      - openldap-dev
      - openresty
      - openssl
      - openssl-dev
      - patch
      - pcre
      - pcre-dev
      - perl
      - perl-app-cpanminus
      - perl-dev
      - unzip
      - wget
      - xz
      - yaml-dev
      - zlib-dev

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/apache/apisix
      tag: ${{package.version}}
      expected-commit: 77dacda31277a31d6014b4970e36bae2a5c30907

  - uses: patch
    with:
      patches: set-deps-path.patch

  - runs: |
      luarocks install apisix-master-0.rockspec --tree deps --only-deps

  # https://github.com/apache/apisix/blob/master/Makefile#L248-L388
  - name: Setup required directories
    runs: |
      install -d "${{targets.contextdir}}"/usr/local/apisix/
      install -d "${{targets.contextdir}}"/usr/local/apisix/logs/
      install -d "${{targets.contextdir}}"/usr/local/apisix/conf/cert
      install conf/mime.types "${{targets.contextdir}}"/usr/local/apisix/conf/mime.types
      install conf/config.yaml "${{targets.contextdir}}"/usr/local/apisix/conf/config.yaml
      install conf/debug.yaml "${{targets.contextdir}}"/usr/local/apisix/conf/debug.yaml
      install conf/cert/* "${{targets.contextdir}}"/usr/local/apisix/conf/cert/

      # directories listed in alphabetical order
      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix
      install apisix/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/admin
      install apisix/admin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/admin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/balancer
      install apisix/balancer/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/balancer/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/cli
      install apisix/cli/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/cli/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/control
      install apisix/control/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/control/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/core
      install apisix/core/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/core/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/core/dns
      install apisix/core/dns/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/core/dns/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery
      install apisix/discovery/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/

      install -d \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul_kv \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/dns \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/eureka \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/nacos \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/kubernetes \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/tars/

      install apisix/discovery/consul/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul/
      install apisix/discovery/consul_kv/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul_kv/
      install apisix/discovery/dns/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/dns/
      install apisix/discovery/eureka/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/eureka/
      install apisix/discovery/kubernetes/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/kubernetes/
      install apisix/discovery/nacos/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/nacos/
      install apisix/discovery/tars/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/tars/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/http
      install apisix/http/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/http/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/http/router
      install apisix/http/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/http/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/include/apisix/model
      install apisix/include/apisix/model/*.proto "${{targets.contextdir}}"/usr/local/apisix/apisix/include/apisix/model/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/inspect
      install apisix/inspect/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/inspect/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins
      install apisix/plugins/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ext-plugin
      install apisix/plugins/ext-plugin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ext-plugin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/grpc-transcode
      install apisix/plugins/grpc-transcode/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/grpc-transcode/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ip-restriction
      install apisix/plugins/ip-restriction/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ip-restriction/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-conn
      install apisix/plugins/limit-conn/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-conn/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-req
      install apisix/plugins/limit-req/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-req/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-count
      install apisix/plugins/limit-count/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-count/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/opa
      install apisix/plugins/opa/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/opa/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/prometheus
      install apisix/plugins/prometheus/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/prometheus/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/proxy-cache
      install apisix/plugins/proxy-cache/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/proxy-cache/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/serverless
      install apisix/plugins/serverless/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/serverless/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/syslog
      install apisix/plugins/syslog/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/syslog/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/tencent-cloud-cls
      install apisix/plugins/tencent-cloud-cls/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/tencent-cloud-cls/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/pubsub
      install apisix/pubsub/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/pubsub/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/secret
      install apisix/secret/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/secret/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/zipkin
      install apisix/plugins/zipkin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/zipkin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/ssl/router
      install apisix/ssl/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/ssl/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream
      install apisix/stream/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/plugins
      install apisix/stream/plugins/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/plugins/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/router
      install apisix/stream/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc
      install apisix/stream/xrpc/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/redis
      install apisix/stream/xrpc/protocols/redis/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/redis/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/dubbo
      install apisix/stream/xrpc/protocols/dubbo/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/dubbo/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/utils
      install apisix/utils/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/utils/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-proxy
      install apisix/plugins/ai-proxy/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-proxy/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-drivers
      install apisix/plugins/ai-drivers/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-drivers/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/embeddings
      install apisix/plugins/ai-rag/embeddings/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/embeddings/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/vector-search
      install apisix/plugins/ai-rag/vector-search/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/vector-search/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/broker
      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/transport
      install apisix/plugins/mcp/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/
      install apisix/plugins/mcp/broker/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/broker/
      install apisix/plugins/mcp/transport/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/transport/

      install -d "${{targets.contextdir}}"/usr/bin/
      install bin/apisix "${{targets.contextdir}}"/usr/bin/apisix

      install -d "${{targets.contextdir}}"/usr/local/apisix/deps/bin
      install bin/apisix "${{targets.contextdir}}"/usr/local/apisix/deps/bin/apisix
      mv deps/lib "${{targets.contextdir}}"/usr/local/apisix/deps/lib
      mv deps/share "${{targets.contextdir}}"/usr/local/apisix/deps/share

subpackages:
  - name: "apache-apisix-compat"
    description: "Compat package for apache-apisix"
    dependencies:
      runtime:
        # https://github.com/apache/apisix-docker/blob/release/apisix-3.13.0/debian/Dockerfile#L45
        - brotli
        - ca-certificates-bundle
    pipeline:
      - runs: |
          install -d "${{targets.contextdir}}"/usr/local/apisix/logs/
          ln -sf /dev/stdout "${{targets.contextdir}}"/usr/local/apisix/logs/access.log
          ln -sf /dev/stdout "${{targets.contextdir}}"/usr/local/apisix/logs/access.log
          install docker/debian-dev/docker-entrypoint.sh "${{targets.contextdir}}"/
          install docker/utils/check_standalone_config.sh "${{targets.contextdir}}"/

update:
  enabled: true
  github:
    identifier: apache/apisix
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - etcd
  pipeline:
    - runs: |
        apisix version | grep ${{package.version}}
        apisix test | grep "configuration test is successful"
    - name: "Test setup and run apisix"
      runs: |
        nohup etcd >/tmp/etcd.log 2>&1 &
