package:
  name: apache-apisix
  version: "3.13.0"
  epoch: 0
  description: "The Cloud-Native API Gateway and AI Gateway"
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - bash
      # base64 is required at runtime
      - coreutils
      - gd
      - geoip
      - libgcc
      - libwasmtime
      - libxslt
      - luajit
      - merged-usrsbin
      - openssl
      - pcre
      - perl
      - wolfi-baselayout
      - zlib

environment:
  contents:
    packages:
      - bash
      - build-base
      - busybox
      - ca-certificates-bundle
      - coreutils
      - curl
      - etcd
      - gcc
      - gd-dev
      - geoip-dev
      - gnupg
      - libwasmtime
      - libxml2-dev
      - libxslt-dev
      - linux-headers
      - lua-resty-events
      - lua-resty-worker-events
      - luajit
      - luajit-dev
      - luarocks
      - openldap-dev
      - openssl
      - openssl-dev
      - patch
      - pcre
      - pcre-dev
      - perl
      - perl-app-cpanminus
      - perl-dev
      - readline-dev
      - unzip
      - wasmtime
      - wasmtime-dev
      - wget
      - xz
      - yaml-dev
      - zlib
      - zlib-dev

vars:
  BUILD_DIRECTORY: "/home/build"
  OPENRESTY_VERSION: "1.27.1.2"
  OPENRESTY_CHECKSUM: "74f076f7e364b2a99a6c5f9bb531c27610c78985abe956b442b192a2295f7548"
  NGINX_VERSION: "1.27.1"
  RESTY_EVENTS_VERSION: "0.3.1"
  RESTY_EVENTS_CHECKSUM: "bc85295b7c23eda2dbf2b4acec35c93f77b26787"
  NGX_MULTI_UPSTREAM_VERSION: "1.3.2"
  NGX_MULTI_UPSTREAM_CHECKSUM: "0c9e4cec7cb8ec281a4e66fe2dcf2b927c8ef46d"
  DUBBO_MODULE_VERSION: "1.0.2"
  DUBBO_MODULE_CHECKSUM: "4aabf9448fe4a49ca71009af8e03645ee5dadd15"
  APISIX_NGINX_MODULE_VERSION: "1.19.2"
  APISIX_NGINX_MODULE_CHECKSUM: "b94ebabffc87d88d540346dc3edb5f7606418305"
  WASM_NGINX_MODULE_VERSION: "0.7.0"
  WASM_NGINX_MODULE_CHECKSUM: "0b4b31d6ecfdbc587e8ea455ed6e920a98aadff1"
  LUA_VAR_NGINX_MODULE_VERSION: "v0.5.3"
  LUA_VAR_NGINX_MODULE_CHECKSUM: "dc04c71e14e8a0407831f9019043d7e6da61b3c3"

# apisix builds openresty from source with a several added modules:
# https://github.com/api7/apisix-build-tools/blob/apisix/3.13.0/build-apisix-runtime.sh#L82
pipeline:
  - working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}/
    uses: fetch
    with:
      uri: https://openresty.org/download/openresty-${{vars.OPENRESTY_VERSION}}.tar.gz
      expected-sha256: ${{vars.OPENRESTY_CHECKSUM}}
  - uses: git-checkout
    with:
      repository: https://github.com/Kong/lua-resty-events
      tag: ${{vars.RESTY_EVENTS_VERSION}}
      expected-commit: ${{vars.RESTY_EVENTS_CHECKSUM}}
      destination: lua-resty-events
  - uses: git-checkout
    with:
      repository: https://github.com/api7/ngx_multi_upstream_module.git
      tag: ${{vars.NGX_MULTI_UPSTREAM_VERSION}}
      expected-commit: ${{vars.NGX_MULTI_UPSTREAM_CHECKSUM}}
      destination: nginx-multi-upstream
  - uses: git-checkout
    with:
      repository: https://github.com/api7/mod_dubbo.git
      tag: ${{vars.DUBBO_MODULE_VERSION}}
      expected-commit: ${{vars.DUBBO_MODULE_CHECKSUM}}
      destination: dubbo-module
  - uses: git-checkout
    with:
      repository: https://github.com/api7/apisix-nginx-module.git
      tag: ${{vars.APISIX_NGINX_MODULE_VERSION}}
      expected-commit: ${{vars.APISIX_NGINX_MODULE_CHECKSUM}}
      destination: apisix-nginx-module
  - uses: git-checkout
    with:
      repository: https://github.com/api7/wasm-nginx-module.git
      tag: ${{vars.WASM_NGINX_MODULE_VERSION}}
      expected-commit: ${{vars.WASM_NGINX_MODULE_CHECKSUM}}
      destination: wasm-nginx-module
  - uses: git-checkout
    with:
      repository: https://github.com/api7/lua-var-nginx-module
      tag: ${{vars.LUA_VAR_NGINX_MODULE_VERSION}}
      expected-commit: ${{vars.LUA_VAR_NGINX_MODULE_CHECKSUM}}
      destination: lua-var-nginx-module
  # Apply upstream patches to configure out nginx server
  # https://github.com/api7/apisix-build-tools/blob/apisix/3.13.0/build-apisix-runtime.sh#L130
  - name: Apply ngx-multi-upstream patches
    working-directory: ${{vars.BUILD_DIRECTORY}}/nginx-multi-upstream/
    runs: |
      ./patch.sh ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
  - name: Apply apisix-nginx-module patches
    working-directory: ${{vars.BUILD_DIRECTORY}}/apisix-nginx-module/patch
    runs: |
      ./patch.sh ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
  # Configure is replicated from here: https://github.com/api7/apisix-build-tools/blob/apisix/3.13.0/build-apisix-runtime.sh#L161
  - name: Configure openresty build
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    runs: |
      ./configure \
        --add-module=../lua-resty-events \
        --add-module=../dubbo-module \
        --add-module=../nginx-multi-upstream \
        --add-module=../lua-var-nginx-module \
        --add-module=../wasm-nginx-module \
        --add-module=../apisix-nginx-module \
        --add-module=../apisix-nginx-module/src/meta \
        --add-module=../apisix-nginx-module/src/stream \
        --build=${{host.triplet.gnu}} \
        --with-pcre \
        --with-cc-opt='-DNGX_LUA_ABORT_AT_PANIC -I/usr/include' \
        --with-ld-opt='-L/usr/lib -Wl,-rpath,/usr/lib' \
        --conf-path=/etc/nginx/nginx.conf \
        --sbin-path=/usr/bin/nginx \
        --error-log-path=/var/log/openresty/error.log \
        --http-log-path=/var/log/openresty/access.log \
        --pid-path=/var/log/openresty/nginx.pid \
        --lock-path=/var/log/openresty/nginx.lock \
        --http-client-body-temp-path=/var/run/openresty/nginx-client-body \
        --http-proxy-temp-path=/var/run/openresty/nginx-proxy \
        --http-fastcgi-temp-path=/var/run/openresty/nginx-fastcgi \
        --http-uwsgi-temp-path=/var/run/openresty/nginx-uwsgi \
        --http-scgi-temp-path=/var/run/openresty/nginx-scgi \
        --with-poll_module \
        --with-pcre-jit \
        --without-http_rds_json_module \
        --without-http_rds_csv_module \
        --without-lua_rds_parser \
        --with-stream \
        --with-stream_ssl_module \
        --with-stream_ssl_preread_module \
        --with-http_v2_module \
        --with-http_v3_module \
        --without-mail_pop3_module \
        --without-mail_imap_module \
        --without-mail_smtp_module \
        --with-http_stub_status_module \
        --with-http_realip_module \
        --with-http_addition_module \
        --with-http_auth_request_module \
        --with-http_secure_link_module \
        --with-http_random_index_module \
        --with-http_gzip_static_module \
        --with-http_sub_module \
        --with-http_dav_module \
        --with-http_flv_module \
        --with-http_mp4_module \
        --with-http_gunzip_module \
        --with-threads \
        --with-compat \
        --with-luajit=/usr \
        --with-luajit-xcflags='-DLUAJIT_NUMMODE=2 -DLUAJIT_ENABLE_LUA52COMPAT' \
        --with-pcre-jit
  - working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    uses: autoconf/make
  - working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    uses: autoconf/make-install
  - name: Move openresty binaries to /usr/bin
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    runs: |
      mkdir -p ${{targets.destdir}}/usr/bin
      mv ${{targets.destdir}}/usr/local/openresty/bin/* ${{targets.destdir}}/usr/bin/
  - name: Setup default openresty config files
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    runs: |
      mkdir -p ${{targets.destdir}}/var/run/openresty/
      mkdir -p ${{targets.destdir}}/etc/nginx/conf.d
      install -m644 -D ${{vars.BUILD_DIRECTORY}}/nginx.conf ${{targets.destdir}}/etc/nginx/
      install -m644 -D ${{vars.BUILD_DIRECTORY}}/default.conf ${{targets.destdir}}/etc/nginx/conf.d
      install -d ${{targets.contextdir}}/var/log/openresty
      ln -sf /dev/stdout ${{targets.contextdir}}/var/log/openresty/access.log
      ln -sf /dev/stderr ${{targets.contextdir}}/var/log/openresty/error.log
  # Install lua-resty-events, apisix-nginx-module, and wasm-nginx-module
  # https://github.com/api7/apisix-build-tools/blob/apisix/3.13.0/build-apisix-runtime.sh#L208
  - name: Install lua-resty-events library into the openresty directory
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    runs: |
      install -d ${{targets.destdir}}/usr/local/openresty/site/lualib/resty/events/compat
      install -m644 -D /usr/local/lib/lua/resty/events/*.lua  ${{targets.destdir}}/usr/local/openresty/site/lualib/resty/events/
      install -m644 -D /usr/local/lib/lua/resty/events/compat/*.lua  ${{targets.destdir}}/usr/local/openresty/site/lualib/resty/events/compat/
  - name: Install apisix-nginx-module
    working-directory: ${{vars.BUILD_DIRECTORY}}/apisix-nginx-module
    runs: |
      OPENRESTY_PREFIX="${{targets.destdir}}/usr/local/openresty" make install
  - name: Install wasm-nginx-module
    working-directory: ${{vars.BUILD_DIRECTORY}}/wasm-nginx-module
    runs: |
      install -m 664 lib/resty/*.lua ${{targets.destdir}}/usr/local/openresty/lualib/resty
  - uses: strip
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
  # With openresty built and the modules in place, checkout apisix
  - uses: git-checkout
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    with:
      repository: https://github.com/apache/apisix
      tag: ${{package.version}}
      expected-commit: 77dacda31277a31d6014b4970e36bae2a5c30907
      destination: apache-apisix
  # Patch to update the apisix script to use our lua libraries
  - uses: patch
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}
    with:
      patches: ${{vars.BUILD_DIRECTORY}}/set-deps-path.patch
  - working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}/apache-apisix
    runs: |
      luarocks install apisix-master-0.rockspec --tree deps --only-deps
  # https://github.com/apache/apisix/blob/master/Makefile#L248-L388
  - name: Setup required apisix directories
    working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}/apache-apisix
    runs: |
      install -d "${{targets.contextdir}}"/usr/local/apisix/
      install -d "${{targets.contextdir}}"/usr/local/apisix/logs/
      install -d "${{targets.contextdir}}"/usr/local/apisix/conf/cert
      install conf/mime.types "${{targets.contextdir}}"/usr/local/apisix/conf/mime.types
      install conf/config.yaml "${{targets.contextdir}}"/usr/local/apisix/conf/config.yaml
      install conf/debug.yaml "${{targets.contextdir}}"/usr/local/apisix/conf/debug.yaml
      install conf/cert/* "${{targets.contextdir}}"/usr/local/apisix/conf/cert/

      # directories listed in alphabetical order
      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix
      install apisix/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/admin
      install apisix/admin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/admin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/balancer
      install apisix/balancer/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/balancer/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/cli
      install apisix/cli/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/cli/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/control
      install apisix/control/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/control/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/core
      install apisix/core/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/core/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/core/dns
      install apisix/core/dns/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/core/dns/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery
      install apisix/discovery/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/

      install -d \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul_kv \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/dns \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/eureka \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/nacos \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/kubernetes \
        "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/tars/

      install apisix/discovery/consul/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul/
      install apisix/discovery/consul_kv/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/consul_kv/
      install apisix/discovery/dns/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/dns/
      install apisix/discovery/eureka/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/eureka/
      install apisix/discovery/kubernetes/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/kubernetes/
      install apisix/discovery/nacos/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/nacos/
      install apisix/discovery/tars/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/discovery/tars/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/http
      install apisix/http/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/http/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/http/router
      install apisix/http/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/http/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/include/apisix/model
      install apisix/include/apisix/model/*.proto "${{targets.contextdir}}"/usr/local/apisix/apisix/include/apisix/model/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/inspect
      install apisix/inspect/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/inspect/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins
      install apisix/plugins/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ext-plugin
      install apisix/plugins/ext-plugin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ext-plugin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/grpc-transcode
      install apisix/plugins/grpc-transcode/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/grpc-transcode/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ip-restriction
      install apisix/plugins/ip-restriction/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ip-restriction/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-conn
      install apisix/plugins/limit-conn/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-conn/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-req
      install apisix/plugins/limit-req/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-req/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-count
      install apisix/plugins/limit-count/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/limit-count/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/opa
      install apisix/plugins/opa/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/opa/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/prometheus
      install apisix/plugins/prometheus/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/prometheus/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/proxy-cache
      install apisix/plugins/proxy-cache/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/proxy-cache/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/serverless
      install apisix/plugins/serverless/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/serverless/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/syslog
      install apisix/plugins/syslog/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/syslog/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/tencent-cloud-cls
      install apisix/plugins/tencent-cloud-cls/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/tencent-cloud-cls/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/pubsub
      install apisix/pubsub/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/pubsub/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/secret
      install apisix/secret/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/secret/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/zipkin
      install apisix/plugins/zipkin/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/zipkin/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/ssl/router
      install apisix/ssl/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/ssl/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream
      install apisix/stream/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/plugins
      install apisix/stream/plugins/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/plugins/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/router
      install apisix/stream/router/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/router/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc
      install apisix/stream/xrpc/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/redis
      install apisix/stream/xrpc/protocols/redis/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/redis/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/dubbo
      install apisix/stream/xrpc/protocols/dubbo/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/stream/xrpc/protocols/dubbo/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/utils
      install apisix/utils/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/utils/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-proxy
      install apisix/plugins/ai-proxy/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-proxy/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-drivers
      install apisix/plugins/ai-drivers/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-drivers/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/embeddings
      install apisix/plugins/ai-rag/embeddings/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/embeddings/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/vector-search
      install apisix/plugins/ai-rag/vector-search/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/ai-rag/vector-search/

      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/broker
      install -d "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/transport
      install apisix/plugins/mcp/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/
      install apisix/plugins/mcp/broker/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/broker/
      install apisix/plugins/mcp/transport/*.lua "${{targets.contextdir}}"/usr/local/apisix/apisix/plugins/mcp/transport/

      install -d "${{targets.contextdir}}"/usr/bin/
      install bin/apisix "${{targets.contextdir}}"/usr/bin/apisix

      install -d "${{targets.contextdir}}"/usr/local/apisix/deps/bin
      install bin/apisix "${{targets.contextdir}}"/usr/local/apisix/deps/bin/apisix
      mv deps/lib "${{targets.contextdir}}"/usr/local/apisix/deps/lib
      mv deps/share "${{targets.contextdir}}"/usr/local/apisix/deps/share

subpackages:
  - name: "apache-apisix-compat"
    description: "Compat package for apache-apisix"
    dependencies:
      runtime:
        # https://github.com/apache/apisix-docker/blob/release/apisix-3.13.0/debian/Dockerfile#L45
        - brotli
        - ca-certificates-bundle
    pipeline:
      - working-directory: ${{vars.BUILD_DIRECTORY}}/openresty-${{vars.OPENRESTY_VERSION}}/apache-apisix
        runs: |
          install -d "${{targets.contextdir}}"/usr/local/apisix/logs/
          ln -sf /dev/stdout "${{targets.contextdir}}"/usr/local/apisix/logs/access.log
          ln -sf /dev/stdout "${{targets.contextdir}}"/usr/local/apisix/logs/access.log
          install docker/debian-dev/docker-entrypoint.sh "${{targets.contextdir}}"/
          install docker/utils/check_standalone_config.sh "${{targets.contextdir}}"/

update:
  enabled: true
  github:
    identifier: apache/apisix
    strip-prefix: v
    use-tag: true

test:
  environment:
    contents:
      packages:
        - etcd
  pipeline:
    - runs: |
        apisix version | grep ${{package.version}}
        apisix test | grep "configuration test is successful"
    - name: "Test setup and run apisix"
      runs: |
        nohup etcd >/tmp/etcd.log 2>&1 &
